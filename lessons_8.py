import json
import csv
from pathlib import Path
from typing import TextIO
import os
import pickle


# –ó–∞–¥–∞–Ω–∏–µ No1
# üìå –í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É 3 –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# –ú—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–∏ÃÜ —Ñ–∞–∏ÃÜ–ª —Å –ø—Å–µ–≤–¥–æ –∏–º–µ–Ω–∞–º–∏ –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º —á–∏—Å–µ–ª.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µÃà—Ç –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–Ω–µ–µ —Ñ–∞–∏ÃÜ–ª–∞ –Ω–æ–≤—ã–∏ÃÜ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
# üìå –ò–º–µ–Ω–∞ –ø–∏—à–∏—Ç–µ —Å –±–æ–ª—å—à–æ–∏ÃÜ –±—É–∫–≤—ã.
# üìå –ö–∞–∂–¥—É—é –ø–∞—Ä—É —Å–æ—Ö—Ä–∞–Ω—è–∏ÃÜ—Ç–µ —Å –Ω–æ–≤–æ–∏ÃÜ —Å—Ç—Ä–æ–∫–∏.

""""
def create_json(file: Path)-> None:
    file_data = {}
    with open(file, 'r' , encoding='utf-8') as f:
        for line in f:
            name, number = line.split()
            file_data[name.capitalize()]= float(number)
    with open(file.stem+'.json', 'w', encoding='utf-8') as f_2:
        json.dump(file_data, f_2, indent=2 , ensure_ascii=False)
"""

# –ó–∞–¥–∞–Ω–∏–µ No2
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è,
# –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7).
# üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏.
# üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
# üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.

""""
def ask_data(name : str, personal_id: int, level: int)-> dict[int: dict[str, int]]:
    return {level: {personal_id,name}}

def write_json(data: dict)-> None:
    file = 'data.json'
    with open(file, 'w', encoding='utf-8') as f:
        json.dump(file, f, ensure_ascii=False , indent=2)

def ui():
    exit_program = False
    print('Welcome to the programs, give me your date and i remembor this')
    while exit_program:
        personal_id = int(input('–í–≤–µ–¥–∏—Ç–µ ID: '))
        name = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ')
        level = int(input('–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: '))
        continue_program = input('–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –î–∞/–ù–µ—Ç')
        if continue_program == '–Ω–µ—Ç':
            exit_program = True
        write_json(ask_data(name,personal_id,level))

def read_json('data.json', 'r', encoding='utf-8') as read_file:
    data = read_file.read()
    if not data:
        return {}
    del data
    data_from_file = json.load(read_file, object_hook=_decode)
    return data_from_file

def make_base (data_to_write: dict) :
    base_list = []
    read_data = read_json ()
    base_list.append (read_data)
    return base_list

"""

# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –µ—ë
# –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª—ã json, csv –∏ pickle.
#  - –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
# - –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
# - –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö,
# –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ–π —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.

dir_list = os.listdir()


def read_dir(dir_list):
    for perents_dir, children_dir, file_object in os.walk(os.getcwd()):
        with open('file_dir.json', 'w+', encoding='utf-8') as f:
            perents_dir = json.load(f)
            children_dir = json.load(f)
            file_object = json.load(f)
        # with (
        #    open('file_read.csv', 'r', newline='') as f_read,
         #     open('file_dear_csv.csv', 'w+', newline='', encoding='utf-8') as f_write
       # ):
        #     perents_dir , children_dir , file_object = csv.reader(f_read, dialect='exel-tab',quoting=csv.QUOTE_NONNUMERIC)
    perents_dir = dict(perents_dir)
    children_dir = dict(children_dir)
    file_object = dict(file_object)
    with open('file_pikle.pickle', 'wb') as f:
        pickle.dump(perents_dir, f)
        pickle.dump(children_dir, f)
        pickle.dump(file_object, f)

    for children_dir in perents_dir:
        print(f'{perents_dir} —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –ø–∞–ø–∫–∞ –¥–ª—è {children_dir}')


print(read_dir(dir_list))
